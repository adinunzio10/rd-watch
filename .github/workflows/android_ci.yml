name: Android CI

on:
  push:
    branches: ["main"]
    paths:
      - 'app/**'
      - 'build.gradle.kts'
      - 'gradle.properties'
      - 'gradle/**'
      - 'libs.versions.toml'
      - '.github/workflows/android_ci.yml'
  pull_request:
    branches: ["main"]
    paths:
      - 'app/**'
      - 'build.gradle.kts'
      - 'gradle.properties'
      - 'gradle/**'
      - 'libs.versions.toml'
      - '.github/workflows/android_ci.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      - name: Setup Android SDK
        run: |
          # Create Android SDK directory
          sudo mkdir -p /opt/android-sdk
          sudo chown runner:runner /opt/android-sdk
          
          # Set environment variables
          echo "ANDROID_HOME=/opt/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=/opt/android-sdk" >> $GITHUB_ENV
          echo "/opt/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "/opt/android-sdk/platform-tools" >> $GITHUB_PATH
          
          # Download and install command line tools
          cd /opt/android-sdk
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-12266719_latest.zip
          unzip -q commandlinetools-linux-12266719_latest.zip
          rm commandlinetools-linux-12266719_latest.zip
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/ || true
          
          # Accept licenses automatically
          yes | cmdline-tools/latest/bin/sdkmanager --licenses || true
          
          # Install required SDK components
          cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Android Lint
        run: ./gradlew lintDebug

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --continue || true

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error # Fails the workflow if APK is not found

      - name: Upload Lint reports
        uses: actions/upload-artifact@v4
        if: always() # Upload reports even if previous steps fail
        with:
          name: lint-reports
          path: |
            app/build/reports/lint-results-debug.xml
            app/build/reports/lint-results-debug.html
          if-no-files-found: ignore # Don't fail if report is not found (e.g., no lint issues)

      - name: Upload Unit Test reports
        uses: actions/upload-artifact@v4
        if: always() # Upload reports even if previous steps fail
        with:
          name: unit-test-reports
          path: app/build/reports/tests/testDebugUnitTest/
          if-no-files-found: ignore # Don't fail if reports are not found (e.g., no tests yet)
